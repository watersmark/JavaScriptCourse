`use strict`;

// в данном блоке кода рассмотрим работу 
// с массивом, а так же его методы

const arr = [1, 3, 4, 5, 0];

// удалить элемент из конца масива
arr.pop();
console.log(arr);

// добавить элемент в конец массива
arr.push(10);
console.log(arr);

// проходим циклом по всем элементам
for(let elem in arr){
    console.log(elem);
}

// важно понимать, что массив сожет иметь пустые ячейки
// если у нас массив имеет 6 заполненных элементов
// но его последний индекс 99, то его length = 100
let arr1 = [3, 5, 7];
arr1[99] = 0;
console.log(arr1, arr1.length);

// метод для перебора элементов в массиве
// его можно настраивать с помощью трёх параметров
// первый это получаемый элемент
// второй это его индекс в массиве
// третий это сам массив
// в данном массиве не работают break и continue
arr.forEach(function(item, i, arr){
    console.log(`${i} : ${item} внутри массива ${arr}`);
});


// чтобы превратить строку в массив используя 
// разделитель применяем метод split()
let str = "apple, orange, bannana";
const product = str.split(", ");
console.log(product, product.length);


// чтобы объеденить массив в строку используем
// метод join, который принимает разделитель
// между элементами в строке
let str1 = product.join(", ");
console.log(str1, typeof(str1));


// метод для сортировки массивов sort()
// сортирует их как строки, поэтому для 
// сортировки по значению пишем собсивенную
// функцию для сравнения значений

function sorts(a, b){
    return a - b;
}


const arr2 = [2, 13, 0, 234, 18, 1];
arr2.sort(sorts);
console.log(arr2);
